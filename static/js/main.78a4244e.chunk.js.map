{"version":3,"sources":["const.js","reducers/app.js","reducers/rootReducer.js","selector/index.js","components/Title.js","actions/index.js","components/Menu.js","components/Map.js","components/App.js","serviceWorker.js","index.js","store.js"],"names":["MATERIAL_UI_COLORS","MAPBOX_CENTER","geoJSON","initialState","pureData","search","showMenu","map","combineReducers","app","state","action","type","payload","searchFilterData","createSelector","geoJSONData","features","filter","d","tempName","properties","name","toLowerCase","tempSearch","includes","Title","props","simpleAction","event","componentDidMount","setState","classes","this","setToggleMenu","AppBar","position","Toolbar","Typography","variant","style","flexGrow","IconButton","edge","color","aria-label","onClick","Component","connect","dispatch","StyledPaper","styled","Paper","top","padding","width","maxHeight","right","zIndex","overflow","StyledTextField","TextField","Menu","handleSearchText","e","setUpdateSearch","target","value","handelJumpToMap","flyTo","center","geometry","coordinates","Slide","direction","in","mountOnEnter","unmountOnExit","id","label","onChange","margin","Divider","filteredData","List","component","idx","ListItem","button","key","ListItemText","primary","length","Maptwo","markers","activeMarkers","element","getElement","visibility","mapboxgl","Map","accessToken","container","mapContainer","zoom","on","reduce","result","marker","Marker","setLngLat","setPopup","Popup","offset","setHTML","image","addTo","loaded","setMap","height","ref","el","className","theme","createMuiTheme","palette","main","secondary","App","setPureData","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","rootReducer","applyMiddleware","thunk","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78a4244e.chunk.js","sourcesContent":["\nexport const MATERIAL_UI_COLORS = {\n  primary: '#e91e63',\n  secondary: '#4dd0e1'\n}\n\n\nexport const MAPBOX_KEY = 'pk.eyJ1IjoidHVrc3VuIiwiYSI6ImNqejVnYWRscTA4c3kzZG52djdjNWVleWkifQ.0cBObp1PiwUnvvy9W_GNzg';\nexport const MAPBOX_CENTER = [151.20861055151923, -33.86349534679483];\nexport const MAPBOX_ZOOM = 14;\nexport const MAPBOX_MAXBOUNDS = [[151.27452850341797,-33.821370991333055], [151.1505889892578,-33.90461600836232]];\n\n\nexport const geoJSON = {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Sydney Opera House\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/en/thumb/e/e4/SydneyOperaHouse20182.jpg/540px-SydneyOperaHouse20182.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.2152463197708,\n          -33.8568651729163\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Sydney Harbour Bridge\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Sydney_harbour_bridge_new_south_wales.jpg/540px-Sydney_harbour_bridge_new_south_wales.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.21096014976501,\n          -33.85183111853183\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Sydney Observatory\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/22/SydneyObservatory1_gobeirne.jpg/500px-SydneyObservatory1_gobeirne.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.20474815368652,\n          -33.859529092259784\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Museum of Contemporary Art Australia\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/f4/MCA_Sydney.jpg/540px-MCA_Sydney.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.20947420597076,\n          -33.85790313130406\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Art Gallery of New South Wales\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/NSWAG.jpg/440px-NSWAG.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.21726870536804,\n          -33.868816522261326\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Hyde Park\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/The_worlds_best_Hyde_park_Sydney.jpg/540px-The_worlds_best_Hyde_park_Sydney.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.21163606643677,\n          -33.87209026752863\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Sydney Tower Eye\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Amp_tower_center_point_tower_sydney.jpg/480px-Amp_tower_center_point_tower_sydney.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.20893239974976,\n          -33.870484589110035\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": 'Town Hall',\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/SydneyTownHall_gobeirne-1.jpg/500px-SydneyTownHall_gobeirne-1.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.20609194040298,\n          -33.87319262288092\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Queen Victoria Building\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/%281%29QVB-9.jpg/540px-%281%29QVB-9.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.20667397975922,\n          -33.87173394760239\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"St Mary's Cathedral\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/Sydney_StMaryCathedral_perspective.JPG/560px-Sydney_StMaryCathedral_perspective.JPG\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.21335804462433,\n          -33.87125736737583\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"International Convention Centre (ICC) Sydney\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/ICC_Sydney_Convention_Block%2C_March_2017.jpg/480px-ICC_Sydney_Convention_Block%2C_March_2017.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.1997029185295,\n          -33.87531044139371\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Circular Quay\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Circular_Quay_from_Sydney_Harbour_Bridge_%282015-02-08%29.jpg/600px-Circular_Quay_from_Sydney_Harbour_Bridge_%282015-02-08%29.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.2110137939453,\n          -33.86106147643913\n        ]\n      }\n    },\n    {\n      \"type\": \"Feature\",\n      \"properties\": {\n        \"name\": \"Central Station\",\n        \"image\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Central_railway_station_Sydney_2017.jpg/580px-Central_railway_station_Sydney_2017.jpg\"\n      },\n      \"geometry\": {\n        \"type\": \"Point\",\n        \"coordinates\": [\n          151.20673298835754,\n          -33.882583222375295\n        ]\n      }\n    }\n  ]\n}","import { geoJSON } from '../const.js'\n\nconst initialState = {\n  pureData: geoJSON,\n  search: \"\",\n  showMenu: false,\n  map: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_PUREDATA':\n      return { ...state, pureData: action.payload };\n    case 'SET_UPDATESEARCH':\n      return { ...state, search: action.payload };\n    case 'SET_TOGGLEMENU':\n      return { ...state, showMenu: !state.showMenu };\n    case 'SET_MAPBOX':\n      return { ...state, map: action.payload };\n    default:\n      return state\n  }\n}\n\n","import { combineReducers } from 'redux';\nimport app from './app';\nexport default combineReducers({\n    app\n});","import { createSelector } from 'reselect'\n\n// reselect -> Redux addon\nexport const searchFilterData = createSelector(\n  state => state.app.pureData,\n  state => state.app.search,\n  (geoJSONData, search) => {\n    \n    if (geoJSONData){\n      let filteredList = geoJSONData.features.filter((d) => {\n        let tempName = d.properties.name.toLowerCase();\n        let tempSearch = search.toLowerCase();\n        return(tempName.includes(tempSearch));\n      })\n      return(filteredList);\n    } else {\n      return(geoJSONData);\n    }\n\n  }\n)","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setToggleMenu } from '../actions'\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nclass Title extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classes: null\n    };\n  };\n\n  simpleAction = (event) => {\n    this.props.simpleAction();\n  }\n\n  componentDidMount = () => {\n    this.setState({ classes: 'asd' });\n  }\n\n  render() {\n    const { classes } = this.state\n    const { setToggleMenu } = this.props\n    if (classes) {\n      return (\n        <div>\n          <AppBar position=\"fixed\">\n            <Toolbar>\n              <Typography variant=\"h6\" style={{flexGrow: 1}} >\n                Sydney Landmarks\n              </Typography>\n              <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => { setToggleMenu() }}>\n                <MenuIcon />\n              </IconButton>\n\n            </Toolbar>\n          </AppBar>\n        </div>\n      )\n    } else {\n      return(\n        <div></div>\n      )\n    }\n  }\n\n}\n\n\nconst mapStateToProps = state => ({\n  ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setToggleMenu: () => dispatch(setToggleMenu())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Title);\n\n","// Set geoJSON on load\nexport const setPureData = (payload) => dispatch => {\n  dispatch({\n    type: 'SET_PUREDATA',\n    payload: payload\n  })\n}\n\n// Hide/Show menu component\nexport const setToggleMenu = (payload) => dispatch => {\n  dispatch({\n    type: 'SET_TOGGLEMENU',\n    payload: payload\n  })\n}\n\n// Update search string in store\nexport const setUpdateSearch = (payload) => dispatch => {\n  dispatch({\n    type: 'SET_UPDATESEARCH',\n    payload: payload\n  })\n}\n\n// Set map DOM for components to use\nexport const setMap = (payload) => dispatch => {\n  dispatch({\n    type: 'SET_MAPBOX',\n    payload: payload\n  })\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setUpdateSearch } from '../actions';\nimport { searchFilterData } from '../selector';\n\n// Import Material-UI Components\nimport { styled } from '@material-ui/styles';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Slide from '@material-ui/core/Slide';\n\n// Custom styling to Material UI Components\nconst StyledPaper = styled(Paper)({\n    position: 'absolute',\n    top: '50px',\n    padding: '0 10px',\n    width: '250px',\n    maxHeight: 'calc(100vh - 50px)',\n    right: '0px',\n    zIndex: 1,\n    overflow: 'scroll'\n});\n\nconst StyledTextField = styled(TextField)({\n  width: '100%'\n});\n\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  };\n\n  simpleAction = (event) => {\n    this.props.simpleAction();\n  }\n\n  handleSearchText = (e) => {\n    this.props.setUpdateSearch(e.target.value);\n  }\n\n  // Jump to location on map\n  handelJumpToMap = (d) => {\n    let map = this.props.app.map\n    map.flyTo({ center: d.geometry.coordinates });\n  }\n\n  render() {\n    \n    return(\n      <Slide direction=\"down\" in={this.props.app.showMenu} mountOnEnter unmountOnExit>\n        <StyledPaper position=\"fixed\">\n          <StyledTextField\n              id=\"search-field\"\n              label=\"Landmark Name\"\n              value={this.props.app.search}\n              onChange={(e) => {this.handleSearchText(e)}}\n              margin=\"normal\"\n          />\n          <Divider />\n          { this.props.filteredData &&\n          <List component=\"nav\">\n            { this.props.filteredData.map((d, idx) => \n            <ListItem button key={d.properties.name} onClick={ (() => this.handelJumpToMap(d)) }>\n              <ListItemText primary={d.properties.name} />\n            </ListItem>\n            )}\n            { this.props.filteredData.length === 0 &&\n            <ListItem>\n              <ListItemText primary=\"Could not find landmark.\" style={{ color: 'grey'}} />\n            </ListItem>\n            }\n          </List>\n          }\n        </StyledPaper>\n      </Slide>\n    )\n  }\n\n}\n\n\nconst mapStateToProps = state => ({\n  ...state,\n  filteredData: searchFilterData(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setUpdateSearch: (e) => dispatch(setUpdateSearch(e))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Menu);","import React, { Component }  from 'react';\nimport { connect } from 'react-redux';\nimport { searchFilterData } from '../selector';\nimport { setMap } from '../actions';\nimport { MAPBOX_KEY, MAPBOX_CENTER, MAPBOX_ZOOM, MATERIAL_UI_COLORS }  from '../const';\nimport mapboxgl from 'mapbox-gl';\n\nclass Maptwo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          markers: null\n        }\n    }   \n    \n    // Update markers based on search\n    componentDidUpdate() {\n\n      // Check if everything has loaded\n      if (this.props.filteredData && this.state.markers) {\n        \n        //List of marker Names, to check\n        let activeMarkers = this.props.filteredData.map((d) => {\n          return(d.properties.name);\n        });\n        \n        // For each marker, toggle visibility based on menu search\n        this.props.app.pureData.features.map((d) => {\n        // Get marker element and assign its visiblity\n          let element = this.state.markers[d.properties.name].getElement();\n          if (activeMarkers.includes(d.properties.name)) {\n            element.style.visibility = \"visible\";\n          } else {\n            element.style.visibility = \"hidden\";\n          }\n          return d;\n        })\n      }\n    }\n    \n    //Make map + assign markers\n    componentDidMount() {\n        // Create map\n        this.map = new mapboxgl.Map({\n          accessToken: MAPBOX_KEY,\n          container: this.mapContainer,\n          style: 'mapbox://styles/mapbox/dark-v9',\n          center: MAPBOX_CENTER,\n          zoom: MAPBOX_ZOOM\n        });\n        \n        this.map.on('load', () => {\n          // For each marker,create marker on map and assign popup window\n          let markers = this.props.filteredData.reduce((result, d) => {\n            var marker = new mapboxgl.Marker({color: MATERIAL_UI_COLORS.primary})\n              .setLngLat(d.geometry.coordinates)\n              .setPopup(new mapboxgl.Popup({ offset: 20 })\n                .setHTML('<h3>' + d.properties.name  + '</h3> <img style=\"display: block; width: auto; height: auto; max-width: 200px; max-height: 200px;, \" src=\"' + d.properties.image + '\" alt=\"' + d.properties.name + ', image from Wikipedia\">'));\n            marker.addTo(this.map);\n            result[d.properties.name] = marker;\n            return result;\n          }, {});\n          this.setState({ markers: markers, loaded: true });\n        });\n        \n        this.props.setMap(this.map);\n      }\n\n      render() {\n        return (\n          <div \n            style={{ height: '100vh', width: \"100vw\" }}\n            ref={el => this.mapContainer = el}\n            className=\"absolute top right left bottom\"\n          >\n          </div>\n        );\n      }\n}\n\n\nconst mapStateToProps = state => ({\n  ...state,\n  filteredData: searchFilterData(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setMap: (e => dispatch(setMap(e)))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Maptwo);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { setPureData } from '../actions';\nimport { searchFilterData } from '../selector'\nimport { MATERIAL_UI_COLORS, geoJSON } from '../const.js'\n\n// Components\nimport Title from './Title';\nimport Menu from './Menu';\nimport Map from './Map';\n\n// Material-UI theme provider\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\nconst theme = createMuiTheme({\n  palette: {\n      primary: {\n          main: MATERIAL_UI_COLORS.primary,\n      },\n      secondary: {\n          main: MATERIAL_UI_COLORS.secondary,\n      },\n  },\n});\n\nclass App extends Component {\n\n  // Set geoJSON on load\n  componentDidMount = () => {\n    this.props.setPureData(geoJSON);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <MuiThemeProvider theme={theme}>\n          <Title />\n          <Menu />\n          <Map />\n        </MuiThemeProvider>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  ...state,\n  filteredData: searchFilterData(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setPureData: (e) => dispatch(setPureData(e))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={configureStore()}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\nserviceWorker.unregister();","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nexport default function configureStore() {\n return createStore(\n   rootReducer,\n   applyMiddleware(thunk)\n );\n}"],"sourceRoot":""}